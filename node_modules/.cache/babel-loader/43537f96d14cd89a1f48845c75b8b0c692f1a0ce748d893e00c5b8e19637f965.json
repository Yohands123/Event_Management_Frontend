{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pnaya\\\\OneDrive\\\\Desktop\\\\Fullstack Exlcelr\\\\Event-Management\\\\Frontend\\\\eventfront\\\\src\\\\Components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getEvents } from '../services/eventService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Fetch events from the backend when the component mounts\n    const fetchEvents = async () => {\n      const fetchedEvents = await getEvents();\n      setEvents(fetchedEvents);\n    };\n    fetchEvents();\n  }, []);\n  const handleGuestChange = (eventId, guestId, value) => {\n    // Logic to update guest information for the specified event\n    console.log(`Event ID: ${eventId}, Guest ID: ${guestId}, Value: ${value}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event.eventName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", event.eventDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", event.eventLocation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", event.eventTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reason: \", event.eventReason]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Guests:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: \"\",\n          onChange: e => handleGuestChange(event.id, 1, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            hidden: true,\n            children: \"Select Guest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), event.guests.map((guest, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: guest,\n            children: guest\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useState","useEffect","getEvents","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","fetchEvents","fetchedEvents","handleGuestChange","eventId","guestId","value","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","eventName","eventDate","eventLocation","eventTime","eventReason","defaultValue","onChange","e","id","target","disabled","hidden","guests","guest","index","_c","$RefreshReg$"],"sources":["C:/Users/pnaya/OneDrive/Desktop/Fullstack Exlcelr/Event-Management/Frontend/eventfront/src/Components/EventList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getEvents } from '../services/eventService';\r\n\r\n\r\nconst EventList = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch events from the backend when the component mounts\r\n    const fetchEvents = async () => {\r\n      const fetchedEvents = await getEvents();\r\n      setEvents(fetchedEvents);\r\n    };\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const handleGuestChange = (eventId, guestId, value) => {\r\n    // Logic to update guest information for the specified event\r\n    console.log(`Event ID: ${eventId}, Guest ID: ${guestId}, Value: ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Event List</h2>\r\n      {events.map((event) => (\r\n        <div key={event.id}>\r\n          <h3>{event.eventName}</h3>\r\n          <p>Date: {event.eventDate}</p>\r\n          <p>Location: {event.eventLocation}</p>\r\n          <p>Time: {event.eventTime}</p>\r\n          <p>Reason: {event.eventReason}</p>\r\n          <label>\r\n            Guests:\r\n            <select defaultValue=\"\" onChange={(e) => handleGuestChange(event.id, 1, e.target.value)}>\r\n              <option value=\"\" disabled hidden>Select Guest</option>\r\n              {event.guests.map((guest, index) => (\r\n                <option key={index} value={guest}>\r\n                  {guest}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}